; This is the Calva evaluation results output window.
; TIPS: The keyboard shortcut `ctrl+alt+c o` shows and focuses this window
;   when connected to a REPL session.
; Please see https://calva.io/output/ for more info.
; Happy coding! ♥️

; Connecting ...
; Hooking up nREPL sessions...
; Connected session: clj
; TIPS: 
;   - You can edit the contents here. Use it as a REPL if you like.
;   - `alt+enter` evaluates the current top level form.
;   - `ctrl+enter` evaluates the current form.
;   - `alt+up` and `alt+down` traverse up and down the REPL command history
;      when the cursor is after the last contents at the prompt
;   - Clojure lines in stack traces are peekable and clickable.
clj꞉shadow.user꞉> 
; Creating cljs repl session...
; Connecting cljs repl: shadow-cljs...
;   The Calva Connection Log might have more connection progress information.
; Connected session: cljs, repl: :app
; TIPS: You can choose which REPL to use (clj or cljs):
;    *Calva: Toggle REPL connection*
;    (There is a button in the status bar for this)
:repl/exception!
; 
; Execution error (Error) at (<cljs repl>:1).
Invalid arity: 6
cljs꞉components.rules.events꞉> 
nil
cljs꞉components.rules.events꞉> 
#'components.rules.events/sample-buttons
cljs꞉components.rules.events꞉> 
nil
cljs꞉components.rules.events꞉> 
#'components.rules.events/sample-buttons
cljs꞉components.rules.events꞉> 
nil
cljs꞉components.rules.events꞉> 
#'components.rules.events/sample-buttons
cljs꞉components.rules.events꞉> 
#:button{:content "c", :selected? false, :id 0}
cljs꞉components.rules.events꞉> 
false
cljs꞉components.rules.events꞉> 
0
cljs꞉components.rules.events꞉> 
:repl/exception!
; 
; Execution error (Error) at (<cljs repl>:1).
No protocol method IAssociative.-assoc defined for type cljs.core/List: ({:button/content "c", :button/selected? false, :button/id 0} {:button/content "o", :button/selected? false, :button/id 1})
cljs꞉components.rules.events꞉> 
#'components.rules.events/toggle-select-button
cljs꞉components.rules.events꞉> 
[#:button{:content "c", :selected? true, :id 0} #:button{:content "o", :selected? false, :id 1}]
cljs꞉components.rules.events꞉> 
; nREPL Connection was closed
